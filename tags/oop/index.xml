<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>OOP - Tag - Gray Matter Blog</title>
        <link>http://graysnotes.com/tags/oop/</link>
        <description>OOP - Tag - Gray Matter Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Mgeraldoj07@gmail.com (Gerald Maduabuchi)</managingEditor>
            <webMaster>Mgeraldoj07@gmail.com (Gerald Maduabuchi)</webMaster><lastBuildDate>Thu, 05 Jan 2023 09:13:23 &#43;0100</lastBuildDate><atom:link href="http://graysnotes.com/tags/oop/" rel="self" type="application/rss+xml" /><item>
    <title>Avoiding The Oops in Oop</title>
    <link>http://graysnotes.com/posts/oops-in-oop/</link>
    <pubDate>Thu, 05 Jan 2023 09:13:23 &#43;0100</pubDate>
    <author>Gerald Maduabuchi</author>
    <guid>http://graysnotes.com/posts/oops-in-oop/</guid>
    <description><![CDATA[Introduction There is an awful lot that goes into writing good code that abides by proper Object-Oriented Programming principles. In this tutorial I will basically cover the importance and significance of writing quality code (though I feel that quality code is subjective) thereby avoding &ldquo;Oops in Oop.&rdquo;
Note: &ldquo;Oops&rdquo; is basically an exclamation made after a significant mistake or accident rather.
Getting Started Before being able to follow this tutorial and get the best out of it, you have to meet up with the following perquisites.]]></description>
</item>
</channel>
</rss>
